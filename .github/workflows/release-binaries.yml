name: Release binaries

on:
  push:
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

concurrency:
  group: release-binaries-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
      - name: Build
        run: |
          NAME=sb29guard
          SUF=""
          if [ "${{ matrix.goos }}" = "windows" ]; then SUF=.exe; fi
          OUT=${NAME}-${{ matrix.goos }}-${{ matrix.goarch }}$SUF
          VER=${GITHUB_REF_NAME}
          COM=${GITHUB_SHA}
          DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags "-s -w -X 'github.com/RiceC-at-MasonHS/SB29-guard/cmd/sb29guard.version=$VER' -X 'github.com/RiceC-at-MasonHS/SB29-guard/cmd/sb29guard.commit=$COM' -X 'github.com/RiceC-at-MasonHS/SB29-guard/cmd/sb29guard.date=$DATE'" -o "$OUT" ./cmd/sb29guard
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: sb29guard-*
          if-no-files-found: error
          overwrite: true

  checksums-and-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          merge-multiple: true
          path: dist
      - name: Generate SHA256SUMS
        run: |
          cd dist
          sha256sum * > SHA256SUMS.txt
      - name: Upload to release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*
            dist/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
